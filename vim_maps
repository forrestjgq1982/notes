

n  y<C-G>      *@:call setreg(v:register, <SNR>96_recall())<CR>
noxî           *@:call AutoPairsJump()<CR>
noxð           *@:call AutoPairsToggle()<CR>
   <C-E>         <Plug>NERDTreeTabsToggle<CR>
s  <C-H>       * a<BS>
nox<C-H>         <C-W>h<C-W>_
s  <Tab>         <Right><Plug>(neosnippet_jump_or_expand)
   <NL>          <C-W>j<C-W>_
s  <C-K>         <Plug>(neosnippet_expand_or_jump)
nox<C-K>         <C-W>k<C-W>_
   <C-L>         <C-W>l<C-W>_
s  <CR>        * a<BS>
nox<CR>          <Plug>(wildfire-fuel)
x  <C-N>       * :<C-U>call multiple_cursors#new("v", 0)<CR>
n  <C-N>       * :call multiple_cursors#new("n", 1)<CR>
   <C-P>         <Plug>(ctrlp)
v  <C-Y>c        <Plug>(emmet-code-pretty)
v  <C-Y>m        <Plug>(emmet-merge-lines)
n  <C-Y>A        <Plug>(emmet-anchorize-summary)
n  <C-Y>a        <Plug>(emmet-anchorize-url)
n  <C-Y>k        <Plug>(emmet-remove-tag)
n  <C-Y>j        <Plug>(emmet-split-join-tag)
n  <C-Y>/        <Plug>(emmet-toggle-comment)
n  <C-Y>i        <Plug>(emmet-image-size)
n  <C-Y>N        <Plug>(emmet-move-prev)
n  <C-Y>n        <Plug>(emmet-move-next)
v  <C-Y>D        <Plug>(emmet-balance-tag-outword)
n  <C-Y>D        <Plug>(emmet-balance-tag-outword)
v  <C-Y>d        <Plug>(emmet-balance-tag-inward)
n  <C-Y>d        <Plug>(emmet-balance-tag-inward)
n  <C-Y>u        <Plug>(emmet-update-tag)
n  <C-Y>;        <Plug>(emmet-expand-word)
v  <C-Y>,        <Plug>(emmet-expand-abbr)
n  <C-Y>,        <Plug>(emmet-expand-abbr)
n  <Space>       <C-F>
x  $           * :<C-U>call WrapRelativeMotion("$", 1)<CR>
o  $           * v:call WrapRelativeMotion("$")<CR>
n  $           * :call WrapRelativeMotion("$")<CR>
o  %           * v:<C-U>call <SNR>60_Match_wrapper('',1,'o') <CR>
x  %           * :<C-U>call <SNR>60_Match_wrapper('',1,'v') <CR>m'gv``
n  %           * :<C-U>call <SNR>60_Match_wrapper('',1,'n') <CR>
o  (             <Plug>(textobj-sentence-move-p)
x  (             <Plug>(textobj-sentence-move-p)
n  (             <Plug>(textobj-sentence-move-p)
o  )             <Plug>(textobj-sentence-move-n)
x  )             <Plug>(textobj-sentence-move-n)
n  )             <Plug>(textobj-sentence-move-n)
n  ,P            :Preview<CR>
n  ,ca           <Plug>NERDCommenterAltDelims
x  ,cu           <Plug>NERDCommenterUncomment
n  ,cu           <Plug>NERDCommenterUncomment
x  ,cb           <Plug>NERDCommenterAlignBoth
n  ,cb           <Plug>NERDCommenterAlignBoth
x  ,cl           <Plug>NERDCommenterAlignLeft
n  ,cl           <Plug>NERDCommenterAlignLeft
n  ,cA           <Plug>NERDCommenterAppend
x  ,cy           <Plug>NERDCommenterYank
n  ,cy           <Plug>NERDCommenterYank
x  ,cs           <Plug>NERDCommenterSexy
n  ,cs           <Plug>NERDCommenterSexy
x  ,ci           <Plug>NERDCommenterInvert
n  ,ci           <Plug>NERDCommenterInvert
n  ,c$           <Plug>NERDCommenterToEOL
x  ,cn           <Plug>NERDCommenterNested
n  ,cn           <Plug>NERDCommenterNested
x  ,cm           <Plug>NERDCommenterMinimal
n  ,cm           <Plug>NERDCommenterMinimal
x  ,c<Space>     <Plug>NERDCommenterToggle
n  ,c<Space>     <Plug>NERDCommenterToggle
x  ,cc           <Plug>NERDCommenterComment
n  ,cc           <Plug>NERDCommenterComment
n  ,ig           <Plug>IndentGuidesToggle
nox,,            <Plug>(easymotion-prefix)
nox,sv         * :source ~/.vimrc<CR>
n  ,u          * :UndotreeToggle<CR>
n  ,gg         * :SignifyToggle<CR>
n  ,gi         * :Git add -p %<CR>
n  ,ge         * :Gedit<CR>
n  ,gw         * :Gwrite<CR>
n  ,gr         * :Gread<CR>
n  ,gp         * :Git push<CR>
n  ,gl         * :Glog<CR>
n  ,gb         * :Gblame<CR>
n  ,gc         * :Gcommit<CR>
n  ,gd         * :Gdiff<CR>
n  ,gs         * :Gstatus<CR>
n  ,tt         * :TagbarToggle<CR>
n  ,fu         * :CtrlPFunky<CR>
n  ,jt           <Esc>:%!python -m json.tool<CR><Esc>:set filetype=json<CR>
n  ,sc           :SessionClose<CR>
n  ,ss           :SessionSave<CR>
n  ,sl           :SessionList<CR>
v  ,a|           :Tabularize /|<CR>
n  ,a|           :Tabularize /|<CR>
x  ,a,,          :Tabularize /,\zs<CR>
n  ,a,,          :Tabularize /,\zs<CR>
x  ,a,           :Tabularize /,<CR>
n  ,a,           :Tabularize /,<CR>
x  ,a::          :Tabularize /:\zs<CR>
n  ,a::          :Tabularize /:\zs<CR>
x  ,a:           :Tabularize /:<CR>
n  ,a:           :Tabularize /:<CR>
x  ,a=>          :Tabularize /=><CR>
n  ,a=>          :Tabularize /=><CR>
x  ,a=           :Tabularize /^[^=]*\zs=<CR>
n  ,a=           :Tabularize /^[^=]*\zs=<CR>
x  ,a&           :Tabularize /&<CR>
n  ,a&           :Tabularize /&<CR>
n  ,nt           :NERDTreeFind<CR>
nox,e            :NERDTreeFind<CR>
n  ,ac           <Plug>ToggleAutoCloseMappings
n  ,q          * gwip
n  ,ff           [I:let nr = input("Which one: ")|exe "normal " . nr ."[\t"<CR>
nox,=            <C-W>=
nox,et           :tabe %%
nox,ev         * :call <SNR>7_EditSpf13Config()<CR>
nox,es           :sp %%
nox,ew           :e %%
nox,fc           /\v^[<|=>]{7}( .*|$)<CR>
n  ,/            :set invhlsearch<CR>
n  ,f9           :set foldlevel=9<CR>
n  ,f8           :set foldlevel=8<CR>
n  ,f7           :set foldlevel=7<CR>
n  ,f6           :set foldlevel=6<CR>
n  ,f5           :set foldlevel=5<CR>
n  ,f4           :set foldlevel=4<CR>
n  ,f3           :set foldlevel=3<CR>
n  ,f2           :set foldlevel=2<CR>
n  ,f1           :set foldlevel=1<CR>
n  ,f0           :set foldlevel=0<CR>
x  .           * :normal .<CR>
x  0           * :<C-U>call WrapRelativeMotion("0", 1)<CR>
no 0           * :call WrapRelativeMotion("0")<CR>
n  <D-r>       * :CtrlPMRU<CR>
n  <D-t>       * :CtrlP<CR>
x  <           * <gv
x  >           * >gv
noxH             gT
noxL             gt
x  S             <Plug>VSurround
n  Y           * y$
n  [C            9999[c
n  [c            <Plug>(signify-prev-hunk)
o  [%          * v:<C-U>call <SNR>60_MultiMatch("bW", "o") <CR>
x  [%            <Esc>[%m'gv``
n  [%          * :<C-U>call <SNR>60_MultiMatch("bW", "n") <CR>
nox\bg         * :call ToggleBG()<CR>
n  ]C            9999]c
n  ]c            <Plug>(signify-next-hunk)
o  ]%          * v:<C-U>call <SNR>60_MultiMatch("W",  "o") <CR>
x  ]%            <Esc>]%m'gv``
n  ]%          * :<C-U>call <SNR>60_MultiMatch("W",  "n") <CR>
x  ^           * :<C-U>call WrapRelativeMotion("^", 1)<CR>
no ^           * :call WrapRelativeMotion("^")<CR>
o  aq            <Plug>(textobj-quote-select-d-a)
x  aq            <Plug>(textobj-quote-select-d-a)
o  aQ            <Plug>(textobj-quote-select-s-a)
x  aQ            <Plug>(textobj-quote-select-s-a)
o  as            <Plug>(textobj-sentence-select-a)
x  as            <Plug>(textobj-sentence-select-a)
o  ai            <Plug>(textobj-indent-a)
x  ai            <Plug>(textobj-indent-a)
o  aI            <Plug>(textobj-indent-same-a)
x  aI            <Plug>(textobj-indent-same-a)
x  a%            <Esc>[%v]%
n  cgc           <Plug>ChangeCommentary
n  cr            <Plug>Coerce
n  cS            <Plug>CSurround
n  cs            <Plug>Csurround
n  ds            <Plug>Dsurround
o  g)            <Plug>(textobj-sentence-move-N)
x  g)            <Plug>(textobj-sentence-move-N)
n  g)            <Plug>(textobj-sentence-move-N)
o  g(            <Plug>(textobj-sentence-move-P)
x  g(            <Plug>(textobj-sentence-move-P)
n  g(            <Plug>(textobj-sentence-move-P)
x  gx            <Plug>NetrwBrowseXVis
n  gx            <Plug>NetrwBrowseX
n  gcu           <Plug>Commentary<Plug>Commentary
n  gcc           <Plug>CommentaryLine
o  gc            <Plug>Commentary
n  gc            <Plug>Commentary
x  gc            <Plug>Commentary
o  g%          * v:<C-U>call <SNR>60_Match_wrapper('',0,'o') <CR>
x  g%          * :<C-U>call <SNR>60_Match_wrapper('',0,'v') <CR>m'gv``
n  g%          * :<C-U>call <SNR>60_Match_wrapper('',0,'n') <CR>
x  gS            <Plug>VgSurround
o  iq            <Plug>(textobj-quote-select-d-i)
x  iq            <Plug>(textobj-quote-select-d-i)
o  iQ            <Plug>(textobj-quote-select-s-i)
x  iQ            <Plug>(textobj-quote-select-s-i)
o  is            <Plug>(textobj-sentence-select-i)
x  is            <Plug>(textobj-sentence-select-i)
o  ii            <Plug>(textobj-indent-i)
x  ii            <Plug>(textobj-indent-i)
o  iI            <Plug>(textobj-indent-same-i)
x  iI            <Plug>(textobj-indent-same-i)
noxj           * gj
noxk           * gk
n  ySS           <Plug>YSsurround
n  ySs           <Plug>YSsurround
n  yss           <Plug>Yssurround
n  yS            <Plug>YSurround
n  ys            <Plug>Ysurround
noxzh            zH
noxzl            zL
s  <Del>       * a<BS>
s  <BS>        * a<BS>
o  <Plug>(textobj-quote-select-d-i) & :<C-U>call g:__textobj_quote.do_by_function("select-i","select-d","o")<CR>
v  <Plug>(textobj-quote-select-d-i) & :<C-U>call g:__textobj_quote.do_by_function("select-i","select-d","v")<CR>
o  <Plug>(textobj-quote-select-d-a) & :<C-U>call g:__textobj_quote.do_by_function("select-a","select-d","o")<CR>
v  <Plug>(textobj-quote-select-d-a) & :<C-U>call g:__textobj_quote.do_by_function("select-a","select-d","v")<CR>
o  <Plug>(textobj-quote-select-s-i) & :<C-U>call g:__textobj_quote.do_by_function("select-i","select-s","o")<CR>
v  <Plug>(textobj-quote-select-s-i) & :<C-U>call g:__textobj_quote.do_by_function("select-i","select-s","v")<CR>
o  <Plug>(textobj-quote-select-s-a) & :<C-U>call g:__textobj_quote.do_by_function("select-a","select-s","o")<CR>
v  <Plug>(textobj-quote-select-s-a) & :<C-U>call g:__textobj_quote.do_by_function("select-a","select-s","v")<CR>
o  <Plug>(textobj-sentence-move-N) & :<C-U>call g:__textobj_sentence.do_by_pattern("move-N","move","o")<CR>
v  <Plug>(textobj-sentence-move-N) & :<C-U>call g:__textobj_sentence.do_by_pattern("move-N","move","v")<CR>
n  <Plug>(textobj-sentence-move-N) & :<C-U>call g:__textobj_sentence.do_by_pattern("move-N","move","n")<CR>
o  <Plug>(textobj-sentence-move-p) & :<C-U>call g:__textobj_sentence.do_by_pattern("move-p","move","o")<CR>
v  <Plug>(textobj-sentence-move-p) & :<C-U>call g:__textobj_sentence.do_by_pattern("move-p","move","v")<CR>
n  <Plug>(textobj-sentence-move-p) & :<C-U>call g:__textobj_sentence.do_by_pattern("move-p","move","n")<CR>
o  <Plug>(textobj-sentence-move-n) & :<C-U>call g:__textobj_sentence.do_by_pattern("move-n","move","o")<CR>
v  <Plug>(textobj-sentence-move-n) & :<C-U>call g:__textobj_sentence.do_by_pattern("move-n","move","v")<CR>
n  <Plug>(textobj-sentence-move-n) & :<C-U>call g:__textobj_sentence.do_by_pattern("move-n","move","n")<CR>
o  <Plug>(textobj-sentence-move-P) & :<C-U>call g:__textobj_sentence.do_by_pattern("move-P","move","o")<CR>
v  <Plug>(textobj-sentence-move-P) & :<C-U>call g:__textobj_sentence.do_by_pattern("move-P","move","v")<CR>
n  <Plug>(textobj-sentence-move-P) & :<C-U>call g:__textobj_sentence.do_by_pattern("move-P","move","n")<CR>
o  <Plug>(textobj-sentence-select-i) & :<C-U>call g:__textobj_sentence.do_by_function("select-i","select","o")<CR>
v  <Plug>(textobj-sentence-select-i) & :<C-U>call g:__textobj_sentence.do_by_function("select-i","select","v")<CR>
o  <Plug>(textobj-sentence-select-a) & :<C-U>call g:__textobj_sentence.do_by_function("select-a","select","o")<CR>
v  <Plug>(textobj-sentence-select-a) & :<C-U>call g:__textobj_sentence.do_by_function("select-a","select","v")<CR>
v  <Plug>NetrwBrowseXVis * :<C-U>call netrw#BrowseXVis()<CR>
n  <Plug>NetrwBrowseX * :call netrw#BrowseX(expand((exists("g:netrw_gx")? g:netrw_gx : '<cfile>')),netrw#CheckIfRemote())<CR>
v  <Plug>(emmet-code-pretty) * :call emmet#codePretty()<CR>
v  <Plug>(emmet-merge-lines) * :call emmet#mergeLines()<CR>
n  <Plug>(emmet-anchorize-summary) * :call emmet#anchorizeURL(1)<CR>
n  <Plug>(emmet-anchorize-url) * :call emmet#anchorizeURL(0)<CR>
n  <Plug>(emmet-remove-tag) * :call emmet#removeTag()<CR>
n  <Plug>(emmet-split-join-tag) * :call emmet#splitJoinTag()<CR>
n  <Plug>(emmet-toggle-comment) * :call emmet#toggleComment()<CR>
n  <Plug>(emmet-image-size) * :call emmet#imageSize()<CR>
n  <Plug>(emmet-move-prev-item) * :call emmet#moveNextPrevItem(1)<CR>
n  <Plug>(emmet-move-next-item) * :call emmet#moveNextPrevItem(0)<CR>
n  <Plug>(emmet-move-prev) * :call emmet#moveNextPrev(1)<CR>
n  <Plug>(emmet-move-next) * :call emmet#moveNextPrev(0)<CR>
v  <Plug>(emmet-balance-tag-outword) * :call emmet#balanceTag(-2)<CR>
n  <Plug>(emmet-balance-tag-outword) * :call emmet#balanceTag(-1)<CR>
v  <Plug>(emmet-balance-tag-inward) * :call emmet#balanceTag(2)<CR>
n  <Plug>(emmet-balance-tag-inward) * :call emmet#balanceTag(1)<CR>
n  <Plug>(emmet-update-tag) * :call emmet#updateTag()<CR>
n  <Plug>(emmet-expand-word) * :call emmet#expandAbbr(1,"")<CR>
v  <Plug>(emmet-expand-abbr) * :call emmet#expandAbbr(2,"")<CR>
n  <Plug>(emmet-expand-abbr) * :call emmet#expandAbbr(3,"")<CR>
x  <Plug>(neosnippet_register_oneshot_snippet) * :<C-U>call neosnippet#mappings#_register_oneshot_snippet()<CR>
x  <Plug>(neosnippet_expand_target) * :<C-U>call neosnippet#mappings#_expand_target()<CR>
x  <Plug>(neosnippet_get_selected_text) * :call neosnippet#helpers#get_selected_text(visualmode(), 1)<CR>
s  <Plug>(neosnippet_jump) * neosnippet#mappings#jump_impl()
s  <Plug>(neosnippet_expand) * neosnippet#mappings#expand_impl()
s  <Plug>(neosnippet_jump_or_expand) * neosnippet#mappings#jump_or_expand_impl()
s  <Plug>(neosnippet_expand_or_jump) * neosnippet#mappings#expand_or_jump_impl()
n  <Plug>CommentaryUndo   <Plug>Commentary<Plug>Commentary
n  <Plug>ChangeCommentary * c:<C-U>call <SNR>99_textobject(1)<CR>
o  <Plug>Commentary * :<C-U>call <SNR>99_textobject(0)<CR>
n  <Plug>CommentaryLine * :<C-U>set opfunc=<SNR>99_go|exe 'norm! 'v:count1.'g@_'<CR>
n  <Plug>Commentary * :<C-U>set opfunc=<SNR>99_go<CR>g@
x  <Plug>Commentary * :<C-U>call <SNR>99_go(line("'<"),line("'>"))<CR>
n  <Plug>NERDCommenterAltDelims * :call <SNR>98_SwitchToAlternativeDelimiters(1)<CR>
x  <Plug>NERDCommenterUncomment * :call NERDComment("x", "Uncomment")<CR>
n  <Plug>NERDCommenterUncomment * :call NERDComment("n", "Uncomment")<CR>
x  <Plug>NERDCommenterAlignBoth * :call NERDComment("x", "AlignBoth")<CR>
n  <Plug>NERDCommenterAlignBoth * :call NERDComment("n", "AlignBoth")<CR>
x  <Plug>NERDCommenterAlignLeft * :call NERDComment("x", "AlignLeft")<CR>
n  <Plug>NERDCommenterAlignLeft * :call NERDComment("n", "AlignLeft")<CR>
n  <Plug>NERDCommenterAppend * :call NERDComment("n", "Append")<CR>
x  <Plug>NERDCommenterYank * :call NERDComment("x", "Yank")<CR>
n  <Plug>NERDCommenterYank * :call NERDComment("n", "Yank")<CR>
x  <Plug>NERDCommenterSexy * :call NERDComment("x", "Sexy")<CR>
n  <Plug>NERDCommenterSexy * :call NERDComment("n", "Sexy")<CR>
x  <Plug>NERDCommenterInvert * :call NERDComment("x", "Invert")<CR>
n  <Plug>NERDCommenterInvert * :call NERDComment("n", "Invert")<CR>
n  <Plug>NERDCommenterToEOL * :call NERDComment("n", "ToEOL")<CR>
x  <Plug>NERDCommenterNested * :call NERDComment("x", "Nested")<CR>
n  <Plug>NERDCommenterNested * :call NERDComment("n", "Nested")<CR>
x  <Plug>NERDCommenterMinimal * :call NERDComment("x", "Minimal")<CR>
n  <Plug>NERDCommenterMinimal * :call NERDComment("n", "Minimal")<CR>
x  <Plug>NERDCommenterToggle * :call NERDComment("x", "Toggle")<CR>
n  <Plug>NERDCommenterToggle * :call NERDComment("n", "Toggle")<CR>
x  <Plug>NERDCommenterComment * :call NERDComment("x", "Comment")<CR>
n  <Plug>NERDCommenterComment * :call NERDComment("n", "Comment")<CR>
n  <SNR>96_:   * :<C-U><C-R>=v:count ? v:count : ''<CR>
v  <Plug>SurroundWithSingle * :<C-U>call textobj#quote#surround#surround(0, visualmode())<CR>
n  <Plug>SurroundWithSingle * :call textobj#quote#surround#surround(0, '')<CR>
v  <Plug>SurroundWithDouble * :<C-U>call textobj#quote#surround#surround(1, visualmode())<CR>
n  <Plug>SurroundWithDouble * :call textobj#quote#surround#surround(1, '')<CR>
v  <Plug>ReplaceWithStraight * :<C-U>call textobj#quote#replace#replace(0, visualmode())<CR>
n  <Plug>ReplaceWithStraight * :call textobj#quote#replace#replace(0, '')<CR>
v  <Plug>ReplaceWithCurly * :<C-U>call textobj#quote#replace#replace(1, visualmode())<CR>
n  <Plug>ReplaceWithCurly * :call textobj#quote#replace#replace(1, '')<CR>
x  <BS>          <Plug>(wildfire-water)
o  <Plug>(wildfire-quick-select) * :<C-U>call wildfire#QuickSelect({'*': ['i''', 'i"', 'i)', 'i]', 'i}', 'ip'], 'html,xml': ['at']})<CR>
n  <Plug>(wildfire-quick-select) * :<C-U>call wildfire#QuickSelect({'*': ['i''', 'i"', 'i)', 'i]', 'i}', 'ip'], 'html,xml': ['at']})<CR>
v  <Plug>(wildfire-fuel) * :<C-U>call wildfire#Fuel(v:count1)<CR>
o  <Plug>(wildfire-fuel) * :<C-U>call wildfire#Start(v:count1, {'*': ['i''', 'i"', 'i)', 'i]', 'i}', 'ip'], 'html,xml': ['at']})<CR>
n  <Plug>(wildfire-fuel) * :<C-U>call wildfire#Start(v:count1, {'*': ['i''', 'i"', 'i)', 'i]', 'i}', 'ip'], 'html,xml': ['at']})<CR>
v  <Plug>(wildfire-water) * :<C-U>call wildfire#Water(v:count1)<CR>
o  <Plug>(textobj-indent-i) & :<C-U>call g:__textobj_indent.do_by_function("select-i","-","o")<CR>
v  <Plug>(textobj-indent-i) & :<C-U>call g:__textobj_indent.do_by_function("select-i","-","v")<CR>
o  <Plug>(textobj-indent-a) & :<C-U>call g:__textobj_indent.do_by_function("select-a","-","o")<CR>
v  <Plug>(textobj-indent-a) & :<C-U>call g:__textobj_indent.do_by_function("select-a","-","v")<CR>
o  <Plug>(textobj-indent-same-i) & :<C-U>call g:__textobj_indent.do_by_function("select-i","same","o")<CR>
v  <Plug>(textobj-indent-same-i) & :<C-U>call g:__textobj_indent.do_by_function("select-i","same","v")<CR>
o  <Plug>(textobj-indent-same-a) & :<C-U>call g:__textobj_indent.do_by_function("select-a","same","o")<CR>
v  <Plug>(textobj-indent-same-a) & :<C-U>call g:__textobj_indent.do_by_function("select-a","same","v")<CR>
n  <SNR>77_    * <SNR>77_
n  <Plug>Coerce * :<C-U>call <SNR>74_coerce(nr2char(getchar()))<CR>
x  <Plug>(signify-motion-outer-visual) * :<C-U>call sy#util#hunk_text_object(1)<CR>
o  <Plug>(signify-motion-outer-pending) * :<C-U>call sy#util#hunk_text_object(1)<CR>
x  <Plug>(signify-motion-inner-visual) * :<C-U>call sy#util#hunk_text_object(0)<CR>
o  <Plug>(signify-motion-inner-pending) * :<C-U>call sy#util#hunk_text_object(0)<CR>
n  <Plug>(signify-prev-hunk) * &diff ? '[c' : ":\<C-U>call sy#jump#prev_hunk(v:count1)\<CR>"
n  <Plug>(signify-next-hunk) * &diff ? ']c' : ":\<C-U>call sy#jump#next_hunk(v:count1)\<CR>"
n  <Plug>IndentGuidesDisable & :IndentGuidesDisable<CR>
n  <Plug>IndentGuidesEnable & :IndentGuidesEnable<CR>
n  <Plug>IndentGuidesToggle & :IndentGuidesToggle<CR>
   <Plug>(easymotion-prefix)N   <Plug>(easymotion-N)
   <Plug>(easymotion-prefix)n   <Plug>(easymotion-n)
   <Plug>(easymotion-prefix)k   <Plug>(easymotion-k)
   <Plug>(easymotion-prefix)j   <Plug>(easymotion-j)
   <Plug>(easymotion-prefix)gE   <Plug>(easymotion-gE)
   <Plug>(easymotion-prefix)ge   <Plug>(easymotion-ge)
   <Plug>(easymotion-prefix)E   <Plug>(easymotion-E)
   <Plug>(easymotion-prefix)e   <Plug>(easymotion-e)
   <Plug>(easymotion-prefix)B   <Plug>(easymotion-B)
   <Plug>(easymotion-prefix)b   <Plug>(easymotion-b)
   <Plug>(easymotion-prefix)W   <Plug>(easymotion-W)
   <Plug>(easymotion-prefix)w   <Plug>(easymotion-w)
   <Plug>(easymotion-prefix)T   <Plug>(easymotion-T)
   <Plug>(easymotion-prefix)t   <Plug>(easymotion-t)
   <Plug>(easymotion-prefix)s   <Plug>(easymotion-s)
   <Plug>(easymotion-prefix)F   <Plug>(easymotion-F)
   <Plug>(easymotion-prefix)f   <Plug>(easymotion-f)
x  <Plug>(easymotion-activate) * :<C-U>call EasyMotion#activate(1)<CR>
nos<Plug>(easymotion-activate) * :<C-U>call EasyMotion#activate(0)<CR>
   <Plug>(easymotion-dotrepeat) * :<C-U>call EasyMotion#DotRepeat()<CR>
x  <Plug>(easymotion-repeat) * <Esc>:<C-U>call EasyMotion#Repeat(1)<CR>
nos<Plug>(easymotion-repeat) * :<C-U>call EasyMotion#Repeat(0)<CR>
x  <Plug>(easymotion-prev) * :<C-U>call EasyMotion#NextPrevious(1,1)<CR>
nos<Plug>(easymotion-prev) * :<C-U>call EasyMotion#NextPrevious(0,1)<CR>
x  <Plug>(easymotion-next) * :<C-U>call EasyMotion#NextPrevious(1,0)<CR>
nos<Plug>(easymotion-next) * :<C-U>call EasyMotion#NextPrevious(0,0)<CR>
x  <Plug>(easymotion-wl) * <Esc>:<C-U>call EasyMotion#WBL(1,0)<CR>
nos<Plug>(easymotion-wl) * :<C-U>call EasyMotion#WBL(0,0)<CR>
x  <Plug>(easymotion-lineforward) * <Esc>:<C-U>call EasyMotion#LineAnywhere(1,0)<CR>
nos<Plug>(easymotion-lineforward) * :<C-U>call EasyMotion#LineAnywhere(0,0)<CR>
x  <Plug>(easymotion-lineanywhere) * <Esc>:<C-U>call EasyMotion#LineAnywhere(1,2)<CR>
nos<Plug>(easymotion-lineanywhere) * :<C-U>call EasyMotion#LineAnywhere(0,2)<CR>
x  <Plug>(easymotion-bd-wl) * <Esc>:<C-U>call EasyMotion#WBL(1,2)<CR>
nos<Plug>(easymotion-bd-wl) * :<C-U>call EasyMotion#WBL(0,2)<CR>
x  <Plug>(easymotion-linebackward) * <Esc>:<C-U>call EasyMotion#LineAnywhere(1,1)<CR>
nos<Plug>(easymotion-linebackward) * :<C-U>call EasyMotion#LineAnywhere(0,1)<CR>
x  <Plug>(easymotion-bl) * <Esc>:<C-U>call EasyMotion#WBL(1,1)<CR>
nos<Plug>(easymotion-bl) * :<C-U>call EasyMotion#WBL(0,1)<CR>
x  <Plug>(easymotion-el) * <Esc>:<C-U>call EasyMotion#EL(1,0)<CR>
nos<Plug>(easymotion-el) * :<C-U>call EasyMotion#EL(0,0)<CR>
x  <Plug>(easymotion-gel) * <Esc>:<C-U>call EasyMotion#EL(1,1)<CR>
nos<Plug>(easymotion-gel) * :<C-U>call EasyMotion#EL(0,1)<CR>
x  <Plug>(easymotion-bd-el) * <Esc>:<C-U>call EasyMotion#EL(1,2)<CR>
nos<Plug>(easymotion-bd-el) * :<C-U>call EasyMotion#EL(0,2)<CR>
x  <Plug>(easymotion-jumptoanywhere) * <Esc>:<C-U>call EasyMotion#JumpToAnywhere(1,2)<CR>
nos<Plug>(easymotion-jumptoanywhere) * :<C-U>call EasyMotion#JumpToAnywhere(0,2)<CR>
x  <Plug>(easymotion-vim-n) * <Esc>:<C-U>call EasyMotion#Search(1,0,1)<CR>
nos<Plug>(easymotion-vim-n) * :<C-U>call EasyMotion#Search(0,0,1)<CR>
x  <Plug>(easymotion-n) * <Esc>:<C-U>call EasyMotion#Search(1,0,0)<CR>
nos<Plug>(easymotion-n) * :<C-U>call EasyMotion#Search(0,0,0)<CR>
x  <Plug>(easymotion-bd-n) * <Esc>:<C-U>call EasyMotion#Search(1,2,0)<CR>
nos<Plug>(easymotion-bd-n) * :<C-U>call EasyMotion#Search(0,2,0)<CR>
x  <Plug>(easymotion-vim-N) * <Esc>:<C-U>call EasyMotion#Search(1,1,1)<CR>
nos<Plug>(easymotion-vim-N) * :<C-U>call EasyMotion#Search(0,1,1)<CR>
x  <Plug>(easymotion-N) * <Esc>:<C-U>call EasyMotion#Search(1,1,0)<CR>
nos<Plug>(easymotion-N) * :<C-U>call EasyMotion#Search(0,1,0)<CR>
x  <Plug>(easymotion-eol-j) * <Esc>:<C-U>call EasyMotion#Eol(1,0)<CR>
nos<Plug>(easymotion-eol-j) * :<C-U>call EasyMotion#Eol(0,0)<CR>
x  <Plug>(easymotion-sol-k) * <Esc>:<C-U>call EasyMotion#Sol(1,1)<CR>
nos<Plug>(easymotion-sol-k) * :<C-U>call EasyMotion#Sol(0,1)<CR>
x  <Plug>(easymotion-sol-j) * <Esc>:<C-U>call EasyMotion#Sol(1,0)<CR>
nos<Plug>(easymotion-sol-j) * :<C-U>call EasyMotion#Sol(0,0)<CR>
x  <Plug>(easymotion-k) * <Esc>:<C-U>call EasyMotion#JK(1,1)<CR>
nos<Plug>(easymotion-k) * :<C-U>call EasyMotion#JK(0,1)<CR>
x  <Plug>(easymotion-j) * <Esc>:<C-U>call EasyMotion#JK(1,0)<CR>
nos<Plug>(easymotion-j) * :<C-U>call EasyMotion#JK(0,0)<CR>
x  <Plug>(easymotion-bd-jk) * <Esc>:<C-U>call EasyMotion#JK(1,2)<CR>
nos<Plug>(easymotion-bd-jk) * :<C-U>call EasyMotion#JK(0,2)<CR>
x  <Plug>(easymotion-eol-bd-jk) * <Esc>:<C-U>call EasyMotion#Eol(1,2)<CR>
nos<Plug>(easymotion-eol-bd-jk) * :<C-U>call EasyMotion#Eol(0,2)<CR>
x  <Plug>(easymotion-sol-bd-jk) * <Esc>:<C-U>call EasyMotion#Sol(1,2)<CR>
nos<Plug>(easymotion-sol-bd-jk) * :<C-U>call EasyMotion#Sol(0,2)<CR>
x  <Plug>(easymotion-eol-k) * <Esc>:<C-U>call EasyMotion#Eol(1,1)<CR>
nos<Plug>(easymotion-eol-k) * :<C-U>call EasyMotion#Eol(0,1)<CR>
x  <Plug>(easymotion-iskeyword-ge) * <Esc>:<C-U>call EasyMotion#EK(1,1)<CR>
nos<Plug>(easymotion-iskeyword-ge) * :<C-U>call EasyMotion#EK(0,1)<CR>
x  <Plug>(easymotion-w) * <Esc>:<C-U>call EasyMotion#WB(1,0)<CR>
nos<Plug>(easymotion-w) * :<C-U>call EasyMotion#WB(0,0)<CR>
x  <Plug>(easymotion-bd-W) * <Esc>:<C-U>call EasyMotion#WBW(1,2)<CR>
nos<Plug>(easymotion-bd-W) * :<C-U>call EasyMotion#WBW(0,2)<CR>
x  <Plug>(easymotion-iskeyword-w) * <Esc>:<C-U>call EasyMotion#WBK(1,0)<CR>
nos<Plug>(easymotion-iskeyword-w) * :<C-U>call EasyMotion#WBK(0,0)<CR>
x  <Plug>(easymotion-gE) * <Esc>:<C-U>call EasyMotion#EW(1,1)<CR>
nos<Plug>(easymotion-gE) * :<C-U>call EasyMotion#EW(0,1)<CR>
x  <Plug>(easymotion-e) * <Esc>:<C-U>call EasyMotion#E(1,0)<CR>
nos<Plug>(easymotion-e) * :<C-U>call EasyMotion#E(0,0)<CR>
x  <Plug>(easymotion-bd-E) * <Esc>:<C-U>call EasyMotion#EW(1,2)<CR>
nos<Plug>(easymotion-bd-E) * :<C-U>call EasyMotion#EW(0,2)<CR>
x  <Plug>(easymotion-iskeyword-e) * <Esc>:<C-U>call EasyMotion#EK(1,0)<CR>
nos<Plug>(easymotion-iskeyword-e) * :<C-U>call EasyMotion#EK(0,0)<CR>
x  <Plug>(easymotion-b) * <Esc>:<C-U>call EasyMotion#WB(1,1)<CR>
nos<Plug>(easymotion-b) * :<C-U>call EasyMotion#WB(0,1)<CR>
x  <Plug>(easymotion-iskeyword-b) * <Esc>:<C-U>call EasyMotion#WBK(1,1)<CR>
nos<Plug>(easymotion-iskeyword-b) * :<C-U>call EasyMotion#WBK(0,1)<CR>
x  <Plug>(easymotion-iskeyword-bd-w) * <Esc>:<C-U>call EasyMotion#WBK(1,2)<CR>
nos<Plug>(easymotion-iskeyword-bd-w) * :<C-U>call EasyMotion#WBK(0,2)<CR>
x  <Plug>(easymotion-W) * <Esc>:<C-U>call EasyMotion#WBW(1,0)<CR>
nos<Plug>(easymotion-W) * :<C-U>call EasyMotion#WBW(0,0)<CR>
x  <Plug>(easymotion-bd-w) * <Esc>:<C-U>call EasyMotion#WB(1,2)<CR>
nos<Plug>(easymotion-bd-w) * :<C-U>call EasyMotion#WB(0,2)<CR>
x  <Plug>(easymotion-iskeyword-bd-e) * <Esc>:<C-U>call EasyMotion#EK(1,2)<CR>
nos<Plug>(easymotion-iskeyword-bd-e) * :<C-U>call EasyMotion#EK(0,2)<CR>
x  <Plug>(easymotion-ge) * <Esc>:<C-U>call EasyMotion#E(1,1)<CR>
nos<Plug>(easymotion-ge) * :<C-U>call EasyMotion#E(0,1)<CR>
x  <Plug>(easymotion-E) * <Esc>:<C-U>call EasyMotion#EW(1,0)<CR>
nos<Plug>(easymotion-E) * :<C-U>call EasyMotion#EW(0,0)<CR>
x  <Plug>(easymotion-bd-e) * <Esc>:<C-U>call EasyMotion#E(1,2)<CR>
nos<Plug>(easymotion-bd-e) * :<C-U>call EasyMotion#E(0,2)<CR>
x  <Plug>(easymotion-B) * <Esc>:<C-U>call EasyMotion#WBW(1,1)<CR>
nos<Plug>(easymotion-B) * :<C-U>call EasyMotion#WBW(0,1)<CR>
n  <Plug>(easymotion-overwin-w) * :<C-U>call EasyMotion#overwin#w()<CR>
n  <Plug>(easymotion-overwin-line) * :<C-U>call EasyMotion#overwin#line()<CR>
n  <Plug>(easymotion-overwin-f2) * :<C-U>call EasyMotion#OverwinF(2)<CR>
n  <Plug>(easymotion-overwin-f) * :<C-U>call EasyMotion#OverwinF(1)<CR>
x  <Plug>(easymotion-Tln) * <Esc>:<C-U>call EasyMotion#TL(-1,1,1)<CR>
nos<Plug>(easymotion-Tln) * :<C-U>call EasyMotion#TL(-1,0,1)<CR>
x  <Plug>(easymotion-t2) * <Esc>:<C-U>call EasyMotion#T(2,1,0)<CR>
nos<Plug>(easymotion-t2) * :<C-U>call EasyMotion#T(2,0,0)<CR>
x  <Plug>(easymotion-t) * <Esc>:<C-U>call EasyMotion#T(1,1,0)<CR>
nos<Plug>(easymotion-t) * :<C-U>call EasyMotion#T(1,0,0)<CR>
x  <Plug>(easymotion-s) * <Esc>:<C-U>call EasyMotion#S(1,1,2)<CR>
nos<Plug>(easymotion-s) * :<C-U>call EasyMotion#S(1,0,2)<CR>
x  <Plug>(easymotion-tn) * <Esc>:<C-U>call EasyMotion#T(-1,1,0)<CR>
nos<Plug>(easymotion-tn) * :<C-U>call EasyMotion#T(-1,0,0)<CR>
x  <Plug>(easymotion-bd-t2) * <Esc>:<C-U>call EasyMotion#T(2,1,2)<CR>
nos<Plug>(easymotion-bd-t2) * :<C-U>call EasyMotion#T(2,0,2)<CR>
x  <Plug>(easymotion-tl) * <Esc>:<C-U>call EasyMotion#TL(1,1,0)<CR>
nos<Plug>(easymotion-tl) * :<C-U>call EasyMotion#TL(1,0,0)<CR>
x  <Plug>(easymotion-bd-tn) * <Esc>:<C-U>call EasyMotion#T(-1,1,2)<CR>
nos<Plug>(easymotion-bd-tn) * :<C-U>call EasyMotion#T(-1,0,2)<CR>
x  <Plug>(easymotion-fn) * <Esc>:<C-U>call EasyMotion#S(-1,1,0)<CR>
nos<Plug>(easymotion-fn) * :<C-U>call EasyMotion#S(-1,0,0)<CR>
x  <Plug>(easymotion-bd-tl) * <Esc>:<C-U>call EasyMotion#TL(1,1,2)<CR>
nos<Plug>(easymotion-bd-tl) * :<C-U>call EasyMotion#TL(1,0,2)<CR>
x  <Plug>(easymotion-fl) * <Esc>:<C-U>call EasyMotion#SL(1,1,0)<CR>
nos<Plug>(easymotion-fl) * :<C-U>call EasyMotion#SL(1,0,0)<CR>
x  <Plug>(easymotion-bd-tl2) * <Esc>:<C-U>call EasyMotion#TL(2,1,2)<CR>
nos<Plug>(easymotion-bd-tl2) * :<C-U>call EasyMotion#TL(2,0,2)<CR>
x  <Plug>(easymotion-bd-fn) * <Esc>:<C-U>call EasyMotion#S(-1,1,2)<CR>
nos<Plug>(easymotion-bd-fn) * :<C-U>call EasyMotion#S(-1,0,2)<CR>
x  <Plug>(easymotion-f) * <Esc>:<C-U>call EasyMotion#S(1,1,0)<CR>
nos<Plug>(easymotion-f) * :<C-U>call EasyMotion#S(1,0,0)<CR>
x  <Plug>(easymotion-bd-fl) * <Esc>:<C-U>call EasyMotion#SL(1,1,2)<CR>
nos<Plug>(easymotion-bd-fl) * :<C-U>call EasyMotion#SL(1,0,2)<CR>
x  <Plug>(easymotion-Fl2) * <Esc>:<C-U>call EasyMotion#SL(2,1,1)<CR>
nos<Plug>(easymotion-Fl2) * :<C-U>call EasyMotion#SL(2,0,1)<CR>
x  <Plug>(easymotion-tl2) * <Esc>:<C-U>call EasyMotion#TL(2,1,0)<CR>
nos<Plug>(easymotion-tl2) * :<C-U>call EasyMotion#TL(2,0,0)<CR>
x  <Plug>(easymotion-f2) * <Esc>:<C-U>call EasyMotion#S(2,1,0)<CR>
nos<Plug>(easymotion-f2) * :<C-U>call EasyMotion#S(2,0,0)<CR>
x  <Plug>(easymotion-Fln) * <Esc>:<C-U>call EasyMotion#SL(-1,1,1)<CR>
nos<Plug>(easymotion-Fln) * :<C-U>call EasyMotion#SL(-1,0,1)<CR>
x  <Plug>(easymotion-sln) * <Esc>:<C-U>call EasyMotion#SL(-1,1,2)<CR>
nos<Plug>(easymotion-sln) * :<C-U>call EasyMotion#SL(-1,0,2)<CR>
x  <Plug>(easymotion-tln) * <Esc>:<C-U>call EasyMotion#TL(-1,1,0)<CR>
nos<Plug>(easymotion-tln) * :<C-U>call EasyMotion#TL(-1,0,0)<CR>
x  <Plug>(easymotion-fl2) * <Esc>:<C-U>call EasyMotion#SL(2,1,0)<CR>
nos<Plug>(easymotion-fl2) * :<C-U>call EasyMotion#SL(2,0,0)<CR>
x  <Plug>(easymotion-bd-fl2) * <Esc>:<C-U>call EasyMotion#SL(2,1,2)<CR>
nos<Plug>(easymotion-bd-fl2) * :<C-U>call EasyMotion#SL(2,0,2)<CR>
x  <Plug>(easymotion-T2) * <Esc>:<C-U>call EasyMotion#T(2,1,1)<CR>
nos<Plug>(easymotion-T2) * :<C-U>call EasyMotion#T(2,0,1)<CR>
x  <Plug>(easymotion-bd-tln) * <Esc>:<C-U>call EasyMotion#TL(-1,1,2)<CR>
nos<Plug>(easymotion-bd-tln) * :<C-U>call EasyMotion#TL(-1,0,2)<CR>
x  <Plug>(easymotion-T) * <Esc>:<C-U>call EasyMotion#T(1,1,1)<CR>
nos<Plug>(easymotion-T) * :<C-U>call EasyMotion#T(1,0,1)<CR>
x  <Plug>(easymotion-bd-t) * <Esc>:<C-U>call EasyMotion#T(1,1,2)<CR>
nos<Plug>(easymotion-bd-t) * :<C-U>call EasyMotion#T(1,0,2)<CR>
x  <Plug>(easymotion-Tn) * <Esc>:<C-U>call EasyMotion#T(-1,1,1)<CR>
nos<Plug>(easymotion-Tn) * :<C-U>call EasyMotion#T(-1,0,1)<CR>
x  <Plug>(easymotion-s2) * <Esc>:<C-U>call EasyMotion#S(2,1,2)<CR>
nos<Plug>(easymotion-s2) * :<C-U>call EasyMotion#S(2,0,2)<CR>
x  <Plug>(easymotion-Tl) * <Esc>:<C-U>call EasyMotion#TL(1,1,1)<CR>
nos<Plug>(easymotion-Tl) * :<C-U>call EasyMotion#TL(1,0,1)<CR>
x  <Plug>(easymotion-sn) * <Esc>:<C-U>call EasyMotion#S(-1,1,2)<CR>
nos<Plug>(easymotion-sn) * :<C-U>call EasyMotion#S(-1,0,2)<CR>
x  <Plug>(easymotion-Fn) * <Esc>:<C-U>call EasyMotion#S(-1,1,1)<CR>
nos<Plug>(easymotion-Fn) * :<C-U>call EasyMotion#S(-1,0,1)<CR>
x  <Plug>(easymotion-sl) * <Esc>:<C-U>call EasyMotion#SL(1,1,2)<CR>
nos<Plug>(easymotion-sl) * :<C-U>call EasyMotion#SL(1,0,2)<CR>
x  <Plug>(easymotion-Fl) * <Esc>:<C-U>call EasyMotion#SL(1,1,1)<CR>
nos<Plug>(easymotion-Fl) * :<C-U>call EasyMotion#SL(1,0,1)<CR>
x  <Plug>(easymotion-sl2) * <Esc>:<C-U>call EasyMotion#SL(2,1,2)<CR>
nos<Plug>(easymotion-sl2) * :<C-U>call EasyMotion#SL(2,0,2)<CR>
x  <Plug>(easymotion-bd-fln) * <Esc>:<C-U>call EasyMotion#SL(-1,1,2)<CR>
nos<Plug>(easymotion-bd-fln) * :<C-U>call EasyMotion#SL(-1,0,2)<CR>
x  <Plug>(easymotion-F) * <Esc>:<C-U>call EasyMotion#S(1,1,1)<CR>
nos<Plug>(easymotion-F) * :<C-U>call EasyMotion#S(1,0,1)<CR>
x  <Plug>(easymotion-bd-f) * <Esc>:<C-U>call EasyMotion#S(1,1,2)<CR>
nos<Plug>(easymotion-bd-f) * :<C-U>call EasyMotion#S(1,0,2)<CR>
x  <Plug>(easymotion-F2) * <Esc>:<C-U>call EasyMotion#S(2,1,1)<CR>
nos<Plug>(easymotion-F2) * :<C-U>call EasyMotion#S(2,0,1)<CR>
x  <Plug>(easymotion-bd-f2) * <Esc>:<C-U>call EasyMotion#S(2,1,2)<CR>
nos<Plug>(easymotion-bd-f2) * :<C-U>call EasyMotion#S(2,0,2)<CR>
x  <Plug>(easymotion-Tl2) * <Esc>:<C-U>call EasyMotion#TL(2,1,1)<CR>
nos<Plug>(easymotion-Tl2) * :<C-U>call EasyMotion#TL(2,0,1)<CR>
x  <Plug>(easymotion-fln) * <Esc>:<C-U>call EasyMotion#SL(-1,1,0)<CR>
nos<Plug>(easymotion-fln) * :<C-U>call EasyMotion#SL(-1,0,0)<CR>
n  <Plug>(ctrlp) * :<C-U>CtrlP<CR>
n  <Plug>(conflict-marker-prev-hunk) * :<C-U>ConflictMarkerPrevHunk<CR>
n  <Plug>(conflict-marker-next-hunk) * :<C-U>ConflictMarkerNextHunk<CR>
n  <Plug>(conflict-marker-none) * :<C-U>ConflictMarkerNone<CR>
n  <Plug>(conflict-marker-both) * :<C-U>ConflictMarkerBoth<CR>
n  <Plug>(conflict-marker-ourselves) * :<C-U>ConflictMarkerOurselves<CR>
n  <Plug>(conflict-marker-themselves) * :<C-U>ConflictMarkerThemselves<CR>
v  <Plug>VgSurround * :<C-U>call <SNR>52_opfunc(visualmode(),visualmode() ==# 'V' ? 0 : 1)<CR>
v  <Plug>VSurround * :<C-U>call <SNR>52_opfunc(visualmode(),visualmode() ==# 'V' ? 1 : 0)<CR>
n  <Plug>YSurround * :<C-U>set opfunc=<SNR>52_opfunc2<CR>g@
n  <Plug>Ysurround * :<C-U>set opfunc=<SNR>52_opfunc<CR>g@
n  <Plug>YSsurround * :<C-U>call <SNR>52_opfunc2(v:count1)<CR>
n  <Plug>Yssurround * :<C-U>call <SNR>52_opfunc(v:count1)<CR>
n  <Plug>CSurround * :<C-U>call <SNR>52_changesurround(1)<CR>
n  <Plug>Csurround * :<C-U>call <SNR>52_changesurround()<CR>
n  <Plug>Dsurround * :<C-U>call <SNR>52_dosurround(<SNR>52_inputtarget())<CR>
n  <Plug>SurroundRepeat * .
   <Plug>NERDTreeFocusToggle & :call <SNR>51_NERDTreeFocusToggle()
   <Plug>NERDTreeSteppedClose & :call <SNR>51_NERDTreeSteppedClose()
   <Plug>NERDTreeSteppedOpen & :call <SNR>51_NERDTreeSteppedOpen()
   <Plug>NERDTreeMirrorToggle & :call <SNR>51_NERDTreeMirrorToggle()
   <Plug>NERDTreeMirrorOpen & :call <SNR>51_NERDTreeMirrorOrCreate()
   <Plug>NERDTreeTabsFind & :call <SNR>51_NERDTreeFindFile()
   <Plug>NERDTreeTabsToggle & :call <SNR>51_NERDTreeToggleAllTabs()
   <Plug>NERDTreeTabsClose & :call <SNR>51_NERDTreeCloseAllTabs()
   <Plug>NERDTreeTabsOpen & :call <SNR>51_NERDTreeOpenAllTabs()
   <F11>         :call system("wmctrl -ir " . v:windowid . " -b toggle,fullscreen")<CR>
v  <Home>      * :<C-U>call WrapRelativeMotion("0", 1)<CR>
v  <End>       * :<C-U>call WrapRelativeMotion("$", 1)<CR>
o  <End>       * v:call WrapRelativeMotion("$")<CR>
no <Home>      * :call WrapRelativeMotion("0")<CR>
n  <End>       * :call WrapRelativeMotion("$")<CR>
